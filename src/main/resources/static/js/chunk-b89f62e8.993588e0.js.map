{"version":3,"sources":["webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/fn/json/stringify.js","webpack:///./src/views/Dashboard.vue?e4ea","webpack:///src/views/Dashboard.vue","webpack:///./src/views/Dashboard.vue?3f19","webpack:///./src/views/Dashboard.vue","webpack:///./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js"],"names":["core","__webpack_require__","$JSON","JSON","stringify","module","exports","it","apply","arguments","render","_vm","this","_h","$createElement","_c","_self","attrs","fill-height","fluid","grid-list-xl","wrap","md12","sm12","lg6","data","dailySalesChart","options","color","type","staticClass","_v","slot","small","_e","staticRenderFns","Dashboardvue_type_script_lang_js_","labels","series","lineSmooth","$chartist","Interpolation","cardinal","tension","low","high","chartPadding","top","right","bottom","left","dataCompletedTasksChart","headers","sortable","text","value","align","items","name","country","city","salary","tabs","list","0","1","2","done","mounted","_this","url","axios","get","then","response","console","log","calculate_sum","catch","error","stringify_default","methods","complete","index","calculate_increase","format","date","arr","split","starttime","Date","starttimes","getTime","orders","today","toISOString","substr","t","i","length","cart","buydate","date_value","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","d","sub","k","totPrice","views_Dashboardvue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/chunk-b89f62e8.993588e0.js","sourcesContent":["var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{attrs:{\"fill-height\":\"\",\"fluid\":\"\",\"grid-list-xl\":\"\"}},[_c('v-layout',{attrs:{\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"md12\":\"\",\"sm12\":\"\",\"lg6\":\"\"}},[(_vm.done)?_c('material-chart-card',{attrs:{\"data\":_vm.dailySalesChart.data,\"options\":_vm.dailySalesChart.options,\"color\":\"info\",\"type\":\"Line\",\"lg6\":\"\"}},[_c('h4',{staticClass:\"title font-weight-light\"},[_vm._v(\"Daily Sales\")]),_c('template',{slot:\"actions\"},[_c('v-icon',{staticClass:\"mr-2\",attrs:{\"small\":\"\"}},[_vm._v(\"\\n            mdi-clock-outline\\n          \")]),_c('span',{staticClass:\"caption grey--text font-weight-light\"},[_vm._v(\"updated just now\")])],1)],2):_vm._e()],1),_c('v-flex',{attrs:{\"md12\":\"\",\"sm12\":\"\",\"lg6\":\"\"}},[(false)?_c('material-chart-card',{attrs:{\"data\":_vm.dataCompletedTasksChart.data,\"options\":_vm.dataCompletedTasksChart.options,\"color\":\"green\",\"type\":\"Line\",\"lg6\":\"\"}},[_c('h3',{staticClass:\"title font-weight-light\"},[_vm._v(\"Weekly Sales\")]),_c('p',{staticClass:\"category d-inline-flex font-weight-light\"},[_vm._v(\"Last Last Campaign Performance\")]),_c('template',{slot:\"actions\"},[_c('v-icon',{staticClass:\"mr-2\",attrs:{\"small\":\"\"}},[_vm._v(\"\\n            mdi-clock-outline\\n          \")]),_c('span',{staticClass:\"caption grey--text font-weight-light\"},[_vm._v(\"campaign sent 26 minutes ago\")])],1)],2):_vm._e()],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-container\n    fill-height\n    fluid\n    grid-list-xl\n  >\n    <v-layout wrap>\n      <v-flex\n        md12\n        sm12\n        lg6\n      >\n        <material-chart-card\n          v-if=\"done\"\n          :data=\"dailySalesChart.data\"\n          :options=\"dailySalesChart.options\"\n          color=\"info\"\n          type=\"Line\"\n          lg6\n        >\n          <h4 class=\"title font-weight-light\">Daily Sales</h4>\n\n          <template slot=\"actions\">\n            <v-icon\n              class=\"mr-2\"\n              small\n            >\n              mdi-clock-outline\n            </v-icon>\n            <span class=\"caption grey--text font-weight-light\">updated just now</span>\n          </template>\n        </material-chart-card>\n      </v-flex>\n      <v-flex\n        md12\n        sm12\n        lg6\n      >\n        <material-chart-card\n          v-if=\"false\"\n          :data=\"dataCompletedTasksChart.data\"\n          :options=\"dataCompletedTasksChart.options\"\n          color=\"green\"\n          type=\"Line\"\n          lg6\n        >\n          <h3 class=\"title font-weight-light\">Weekly Sales</h3>\n          <p class=\"category d-inline-flex font-weight-light\">Last Last Campaign Performance</p>\n\n          <template slot=\"actions\">\n            <v-icon\n              class=\"mr-2\"\n              small\n            >\n              mdi-clock-outline\n            </v-icon>\n            <span class=\"caption grey--text font-weight-light\">campaign sent 26 minutes ago</span>\n          </template>\n        </material-chart-card>\n      </v-flex>\n    </v-layout>\n  </v-container>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      dailySalesChart: {\n        data: {\n          labels: ['D-6', 'D-5', 'D-4', 'D-3', 'D-2', 'D-1', 'today D'],\n          series: [\n            [0, 0, 0, 0, 0, 0, 0]\n          ]\n        },\n        options: {\n          lineSmooth: this.$chartist.Interpolation.cardinal({\n            tension: 0\n          }),\n          low: 0,\n          high: 500, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n          chartPadding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n          }\n        }\n      },\n      dataCompletedTasksChart: {\n        data: {\n          labels: ['Ja', 'Fe', 'Ma', 'Ap', 'Mai', 'Ju', 'Jul', 'Au', 'Se', 'Oc', 'No', 'De'],\n          series: [\n            [230, 750, 450, 300, 280, 240, 200, 190],\n            [220, 50, 40, 30, 80, 40, 100, 90]\n          ]\n        },\n        options: {\n          lineSmooth: this.$chartist.Interpolation.cardinal({\n            tension: 0\n          }),\n          low: 0,\n          high: 1000, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n          chartPadding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n          }\n        }\n      },\n      headers: [\n        {\n          sortable: false,\n          text: 'ID',\n          value: 'id'\n        },\n        {\n          sortable: false,\n          text: 'Name',\n          value: 'name'\n        },\n        {\n          sortable: false,\n          text: 'Salary',\n          value: 'salary',\n          align: 'right'\n        },\n        {\n          sortable: false,\n          text: 'Country',\n          value: 'country',\n          align: 'right'\n        },\n        {\n          sortable: false,\n          text: 'City',\n          value: 'city',\n          align: 'right'\n        }\n      ],\n      items: [\n        {\n          name: 'Dakota Rice',\n          country: 'Niger',\n          city: 'Oud-Tunrhout',\n          salary: '$35,738'\n        },\n        {\n          name: 'Minerva Hooper',\n          country: 'Curaçao',\n          city: 'Sinaai-Waas',\n          salary: '$23,738'\n        }, {\n          name: 'Sage Rodriguez',\n          country: 'Netherlands',\n          city: 'Overland Park',\n          salary: '$56,142'\n        }, {\n          name: 'Philip Chanley',\n          country: 'Korea, South',\n          city: 'Gloucester',\n          salary: '$38,735'\n        }, {\n          name: 'Doris Greene',\n          country: 'Malawi',\n          city: 'Feldkirchen in Kārnten',\n          salary: '$63,542'\n        }\n      ],\n      tabs: 0,\n      list: {\n        0: false,\n        1: false,\n        2: false\n      },\n      done: false\n    }\n  },\n  mounted: function () {\n    var url = 'http://localhost:8080/statistics_by_day'\n    this.axios\n      .get(url)\n      .then(response => {\n        console.log(response.data)\n        this.calculate_sum(response.data)\n      })\n      .catch(error => {\n        JSON.stringify(error)\n        console.log(error)\n      })\n  },\n  methods: {\n    complete (index) {\n      this.list[index] = !this.list[index]\n    },\n    calculate_increase () {\n\n    },\n    format (date) {\n      var arr = date.split('-')\n      var starttime = new Date(arr[0], arr[1], arr[2])\n      var starttimes = starttime.getTime()\n      return starttimes\n    },\n    calculate_sum (orders) {\n      var today = new Date().toISOString().substr(0, 10)\n      var t = this.format(today)\n      var list = [0, 0, 0, 0, 0, 0, 0]\n      for (var i = 0; i < orders.length; i++) {\n        if (orders[i].cart === false) {\n          var date = new Date(orders[i].buydate)\n          var date_value = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate() + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\n          console.log(date_value)\n\n          var d = this.format(date_value.substr(0, 10))\n          var sub = (t - d) / (1000 * 60 * 60 * 24)\n          console.log(sub)\n          var k = 6 - sub\n          console.log(k)\n          list[k] += orders[i].totPrice\n        }\n      }\n      this.dailySalesChart.data.series[0] = list\n      this.done = true\n      console.log(this.dailySalesChart.data.series[0])\n    }\n  }\n}\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Dashboard.vue?vue&type=template&id=2733dce9&\"\nimport script from \"./Dashboard.vue?vue&type=script&lang=js&\"\nexport * from \"./Dashboard.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","module.exports = require(\"core-js/library/fn/json/stringify\");"],"sourceRoot":""}